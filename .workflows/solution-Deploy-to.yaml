# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# Variable 'DeploySettingsPath' was defined in the Variables tab
# Variable 'DomainName' was defined in the Variables tab
# Variable 'DomainSuffix' was defined in the Variables tab
# Variable 'SolutionImportType' was defined in the Variables tab
# Variable 'SolutionPackageType' was defined in the Variables tab
# Variable Group 'Development Key Vault Library' was defined in the Variables tab

trigger: none

jobs:
- job: Job
  displayName: Import Solution
  pool:
    vmImage: windows-2019
  steps:
  - checkout: self
    clean: true
  - task: PowerShell@2
    displayName: Parse branch Path
    inputs:
      filePath: scripts/Parse-BranchPath.ps1
      arguments: -BranchPath $(Build.SourceBranchName)
  - task: PowerShell@2
    displayName: Backup Environment $(DomainName)
    inputs:
      filePath: scripts/Backup-Environment.ps1
      arguments: -DomainName $(DomainName) -ClientID $(Dev-Admin-App-Client-ID) -ClientSecret $(Dev-Admin-App-Client-Secret) -TenantID $(Dev-Admin-App-Tenant-ID) -BackupLabel "Build $(Build.BuildId) backup" -BackupNotes "Backup before importing Solution"
  - task: PowerShell@2
    displayName: Import $(SolutionPackageType) $(Build.SourceBranchName)
    inputs:
      filePath: scripts/Import-Solution.ps1
      arguments: -DomainName $(DomainName) -DomainSuffix $(DomainSuffix) -ClientID $(Dev-Admin-App-Client-ID) -ClientSecret $(Dev-Admin-App-Client-Secret) -TenantID $(Dev-Admin-App-Tenant-ID) -SolutionName $(SolutionName) -SolutionPackageType $(SolutionPackageType) -SolutionImportType $(SolutionImportType) -SolutionSourcePath solutionSrc -ArtifactPath $(System.ArtifactsDirectory) -DeploySettingsPath $(DeploySettingsPath)
  - task: PowerShell@2
    displayName: Set Canvas App Permissions for NDS Program
    inputs:
      filePath: scripts/Set-CanvasPermissions.ps1
      arguments: -DomainName $(DomainName) -ClientID $(Dev-Admin-App-Client-ID) -ClientSecret $(Dev-Admin-App-Client-Secret) -TenantID $(Dev-Admin-App-Tenant-ID) -PublisherPrefix nds -Permissions CanView
  - task: PowerShell@2
    displayName: Set Canvas App Permissions for Deployment Tooling
    inputs:
      filePath: scripts/Set-CanvasPermissions.ps1
      arguments: -DomainName $(DomainName) -ClientID $(Dev-Admin-App-Client-ID) -ClientSecret $(Dev-Admin-App-Client-Secret) -TenantID $(Dev-Admin-App-Tenant-ID) -PublisherPrefix ava -Permissions CanView
...
